<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1520.v56d65e3b_4566">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>jas</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.30-468.v5973151f8cfc">
      <queuingDurationMillis>19</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>18</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@752.vdddedf804e72">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2254.v2a_978de46f35">
      <stagesUUID>44a3d574-4a13-4f66-ae60-888096c8ada7</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2254.v2a_978de46f35">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Clean Workspace</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>cleanWs</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map"/>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Clone Project</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">cp -r /home/jaskirat/gui_project/gui_ike_debugger .</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Run Tests Verbosely</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>dir</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                            <value class="string">/home/jaskirat/gui_project/gui_ike_debugger</value>
                          </value>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                            <name>script</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">def testResult = sh(script: VERBOSE_TEST_COMMAND, returnStatus: true)
                        if (testResult != 0) {
                            // Send email notification if tests fail
                            mail to: &apos;jassep1974@gmail.com,vishal.fortinet42@gmail.com,lvannstruth@gmail.com&apos;,
                                 subject: &quot;JENKINS: Pytest Verbose Test Failed&quot;,
                                 body: &quot;The verbose pytest tests have failed. Please check the test logs for details.&quot;
                            error &quot;Tests failed with verbose output. Aborting further steps.&quot;
                        }</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Run Tests with Coverage</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>dir</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$GStringValue">
                            <value class="string">&quot;${WORKSPACE_PATH}&quot;</value>
                          </value>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>sh</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>script</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                    <value class="string">&quot;${TEST_COMMAND}&quot;</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Check Coverage</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>dir</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$GStringValue">
                            <value class="string">&quot;${WORKSPACE_PATH}&quot;</value>
                          </value>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                            <name>script</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">def output = sh(script: COVERAGE_SCRIPT, returnStdout: true).trim()
                        echo &quot;Coverage Output:\n${output}&quot;

                        def matcher = output =~ /Coverage:\s+([0-9.]+)/ 
                        if (matcher) {
                            def coverageString = matcher[0][1]
                            def coverage = coverageString.toDouble()
                            echo &quot;Extracted coverage: ${coverage}&quot;

                            if (coverageString == MIN_COVERAGE) {
                                echo &quot;✅ Coverage above threshold&quot;
                            } else {
                                echo &quot;❌ Coverage below threshold&quot;
                                currentBuild.result = &apos;UNSTABLE&apos;
                                mail to: &apos;jassep1974@gmail.com,vishal.fortinet42@gmail.com,lvannstruth@gmail.com&apos;,
                                     subject: &quot;JENKINS:Code Coverage Alert: ${coverage}%&quot;,
                                     body: &quot;Coverage has dropped below ${MIN_COVERAGE}%.\n\n${output}&quot;
                            }
                        } else {
                            error &quot;Failed to parse coverage output&quot;
                        }</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>44a3d574-4a13-4f66-ae60-888096c8ada7</uuid>
          </stages>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>COVERAGE_SCRIPT</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">python3 tests/check_coverage.py</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>TEST_COMMAND</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">pytest --cov=gui_ike_debugger tests/</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>MIN_COVERAGE</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">67.28</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>WORKSPACE_PATH</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">gui_ike_debugger</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>TEST_PATH</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">gui_ike_debugger/tests</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>VERBOSE_TEST_COMMAND</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">pytest -v</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
          <triggers>
            <triggers>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTrigger>
                <name>cron</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                    <value class="string">H 1 * * *</value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTrigger>
            </triggers>
          </triggers>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@4080.va_15b_44a_91525">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.30-468.v5973151f8cfc">
      <queuingDurationMillis>1</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>1</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>36278</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>112</queueId>
  <timestamp>1745262208560</timestamp>
  <startTime>1745262208562</startTime>
  <result>SUCCESS</result>
  <duration>36362</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
    agent any

    environment {
        COVERAGE_SCRIPT = &quot;python3 tests/check_coverage.py&quot;
        TEST_COMMAND = &quot;pytest --cov=gui_ike_debugger tests/&quot;
        MIN_COVERAGE = &quot;67.28&quot;
        WORKSPACE_PATH = &quot;gui_ike_debugger&quot;
        TEST_PATH = &quot;gui_ike_debugger/tests&quot;
        VERBOSE_TEST_COMMAND = &quot;pytest -v&quot;
    }

    stages {
        stage(&apos;Clean Workspace&apos;) {
            steps {
                cleanWs()
            }
        }

        stage(&apos;Clone Project&apos;) {
            steps {
                // Replace this with the actual source or git repo as needed
                sh &quot;cp -r /home/jaskirat/gui_project/gui_ike_debugger .&quot;
            }
        }

        stage(&apos;Run Tests Verbosely&apos;) {
            steps {
                dir(&quot;/home/jaskirat/gui_project/gui_ike_debugger&quot;) {
                    script {
                        def testResult = sh(script: VERBOSE_TEST_COMMAND, returnStatus: true)
                        if (testResult != 0) {
                            // Send email notification if tests fail
                            mail to: &apos;jassep1974@gmail.com,vishal.fortinet42@gmail.com,lvannstruth@gmail.com&apos;,
                                 subject: &quot;JENKINS: Pytest Verbose Test Failed&quot;,
                                 body: &quot;The verbose pytest tests have failed. Please check the test logs for details.&quot;
                            error &quot;Tests failed with verbose output. Aborting further steps.&quot;
                        }
                    }
                }
            }
        }

        stage(&apos;Run Tests with Coverage&apos;) {
            steps {
                dir(&quot;${WORKSPACE_PATH}&quot;) {
                    sh &quot;${TEST_COMMAND}&quot;
                }
            }
        }

        stage(&apos;Check Coverage&apos;) {
            steps {
                dir(&quot;${WORKSPACE_PATH}&quot;) {
                    script {
                        def output = sh(script: COVERAGE_SCRIPT, returnStdout: true).trim()
                        echo &quot;Coverage Output:\n${output}&quot;

                        def matcher = output =~ /Coverage:\s+([0-9.]+)/ 
                        if (matcher) {
                            def coverageString = matcher[0][1]
                            def coverage = coverageString.toDouble()
                            echo &quot;Extracted coverage: ${coverage}&quot;

                            if (coverageString == MIN_COVERAGE) {
                                echo &quot;✅ Coverage above threshold&quot;
                            } else {
                                echo &quot;❌ Coverage below threshold&quot;
                                currentBuild.result = &apos;UNSTABLE&apos;
                                mail to: &apos;jassep1974@gmail.com,vishal.fortinet42@gmail.com,lvannstruth@gmail.com&apos;,
                                     subject: &quot;JENKINS:Code Coverage Alert: ${coverage}%&quot;,
                                     body: &quot;Coverage has dropped below ${MIN_COVERAGE}%.\n\n${output}&quot;
                            }
                        } else {
                            error &quot;Failed to parse coverage output&quot;
                        }
                    }
                }
            }
        }
    }

    triggers {
        cron(&apos;H 1 * * *&apos;) // Runs daily at a random minute in the 1AM hour
    }
}
</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>87412188</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>34797295</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>619680787</long>
      </entry>
      <entry>
        <string>run</string>
        <long>534205579</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>14553612</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>277698901</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set"/>
    <sandbox>true</sandbox>
    <iota>59</iota>
    <head>1:59</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>